generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PortfolioEntry {
  id        Int      @id @default(autoincrement())
  userId    String
  symbol    String
  quantity  Int
  avgPrice  Float
  updatedAt DateTime @updatedAt

  @@unique([userId, symbol])
  @@index([userId])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  userId    String
  symbol    String
  quantity  Int
  price     Float
  type      String
  createdAt DateTime @default(now())

  @@index([userId])
}

model WatchlistItem {
  id        Int      @id @default(autoincrement())
  userId    String
  symbol    String
  createdAt DateTime @default(now())

  @@unique([userId, symbol])
  @@index([userId])
}

model Article {
  id            Int      @id @default(autoincrement())
  guid          String   @unique
  title         String
  symbols       String[]
  image_url     String
  sentiment     String
  mixedScore    Float
  negativeScore Float
  neutralScore  Float
  positiveScore Float
  sent          Boolean
  createdAt     DateTime @default(now())
  publishedOn   DateTime @map("PUBLISHED_ON")
}

model Recommendation {
  id        Int      @id @default(autoincrement())
  userId    String
  symbol    String
  createdAt DateTime @default(now())

  @@unique([userId, symbol])
  @@index([userId])
}

model HistoricProfitPoint {
  id        Int      @id @default(autoincrement())
  userId    String
  profit    Float
  timestamp DateTime @default(now())

  @@index([userId])
  @@index([timestamp])
}

model Profile {
  id        Int             @id @default(autoincrement())
  userId    String          @unique
  username  String
  imageUrl  String
  firstName String
  lastName  String
  phone     String
  buyingPower    Float  @default(1000000)
  profit    HistoricProfit?

  @@unique([userId, username])
}

model HistoricProfit {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  profit    Float
  updatedAt DateTime @updatedAt
  user      Profile  @relation(fields: [userId], references: [userId])
}
