// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model PortfolioEntry{
  id Int @id @default(autoincrement())
  userId String // supabase id
  symbol String 
  quantity Int // net amount
  avgPrice Float 
  updatedAt DateTime @updatedAt
  @@unique([userId,symbol]) // only should be one entry per coin - and you update that one
  @@index([userId])
}


model Transaction {
  id  Int  @id @default(autoincrement())
  userId String // supabase id
  symbol String // btc, eth, for frontend fetching
  quantity Int // buy is positive , sell is negative
  price Float // price of coin
  type String // 'BUY' or 'SELL'
  createdAt DateTime @default(now())

  @@index([userId])
}

model WatchlistItem{
  id Int @id @default(autoincrement())
  userId String
  symbol String
  createdAt DateTime @default(now())

  @@unique([userId,symbol]) // no duplicate entries
  @@index([userId]) // creates list of where it is at in DB for easier lookup
}


model Article {
  id        Int    @id @default(autoincrement())
  guid      String
  title     String
  symbols String[]
  image_url String
  url String
  // SentimentScore breakdown
  sentiment     String
  mixedScore    Float
  negativeScore Float
  neutralScore  Float
  positiveScore Float

  sent        Boolean
  createdAt   DateTime @default(now())
  publishedOn DateTime @map("PUBLISHED_ON") // convert date frmo api in to JS date

  @@unique([guid])
}